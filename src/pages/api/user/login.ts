import { NextApiRequest, NextApiResponse } from 'next';

import { UserModel } from '@/server/models/UserModel';
import { createUserWithAutoId, emailValidator } from '@/server/lib/userAPI';
import statusCodes from '@/shared/constants/httpStatusCodes';

export default async (req: NextApiRequest, res: NextApiResponse) => {
  emailValidator(req, res, async () => {
    if (req.method === 'POST') {
      const { email } = req.body;
      try {
        const findUser = await UserModel.findOne({ email });

        if (!findUser) {
          let newUser;
          // Create a new user with an autogenerated ID
          newUser = await createUserWithAutoId(email);

          const newId = newUser._id;

          return res.status(statusCodes.OK).json({
            id: newId,
          });
        }

        // User exists, return their ID
        res.status(statusCodes.OK).json({
          id: findUser._id,
        });
      } catch (err) {
        // Handle errors
        res.status(statusCodes.INTERNAL_SERVER_ERROR).json({
          message: `An error occurred while logging in: ${err}`,
        });
      }
    }
  });
};
